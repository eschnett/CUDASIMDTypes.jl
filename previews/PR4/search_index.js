var documenterSearchIndex = {"docs":
[{"location":"#CUDASIMDTypes.jl","page":"CUDASIMDTypes.jl","title":"CUDASIMDTypes.jl","text":"","category":"section"},{"location":"","page":"CUDASIMDTypes.jl","title":"CUDASIMDTypes.jl","text":"Modules = [CUDASIMDTypes]","category":"page"},{"location":"#CUDASIMDTypes.BFloat16x2","page":"CUDASIMDTypes.jl","title":"CUDASIMDTypes.BFloat16x2","text":"struct BFloat16x2\n\nA SIMD type holding 2 BFloat16 in a combined 32-bit value.\n\n\n\n\n\n","category":"type"},{"location":"#CUDASIMDTypes.Float16x2","page":"CUDASIMDTypes.jl","title":"CUDASIMDTypes.Float16x2","text":"struct Float16x2\n\nA SIMD type holding 2 Float16 in a combined 32-bit value.\n\n\n\n\n\n","category":"type"},{"location":"#CUDASIMDTypes.Int16x2","page":"CUDASIMDTypes.jl","title":"CUDASIMDTypes.Int16x2","text":"struct Int16x2\n\nA SIMD type holding 2 16-bit integers in a combined 32-bit value.\n\n\n\n\n\n","category":"type"},{"location":"#CUDASIMDTypes.Int2x16","page":"CUDASIMDTypes.jl","title":"CUDASIMDTypes.Int2x16","text":"struct Int2x16\n\nA SIMD type holding 16 2-bit integers in a combined 32-bit value.\n\n\n\n\n\n","category":"type"},{"location":"#CUDASIMDTypes.Int2x4","page":"CUDASIMDTypes.jl","title":"CUDASIMDTypes.Int2x4","text":"struct Int2x4\n\nA SIMD type holding 4 2-bit integers in a combined 8-bit value.\n\n\n\n\n\n","category":"type"},{"location":"#CUDASIMDTypes.Int4x2","page":"CUDASIMDTypes.jl","title":"CUDASIMDTypes.Int4x2","text":"struct Int4x2\n\nA SIMD type holding 2 4-bit integers in a combined 8-bit value.\n\n\n\n\n\n","category":"type"},{"location":"#CUDASIMDTypes.Int4x8","page":"CUDASIMDTypes.jl","title":"CUDASIMDTypes.Int4x8","text":"struct Int4x8\n\nA SIMD type holding 8 4-bit integers in a combined 32-bit value.\n\n\n\n\n\n","category":"type"},{"location":"#CUDASIMDTypes.Int8x4","page":"CUDASIMDTypes.jl","title":"CUDASIMDTypes.Int8x4","text":"struct Int8x4\n\nA SIMD type holding 4 8-bit integers in a combined 32-bit value.\n\n\n\n\n\n","category":"type"},{"location":"#CUDASIMDTypes.bitifelse-Tuple{UInt32, UInt32, UInt32}","page":"CUDASIMDTypes.jl","title":"CUDASIMDTypes.bitifelse","text":"bitifelse(cond, x, y)\n\nBitwise version of ifelse.\n\nFor each bit of the output, the respective bit in cond determines whether the respective bit of x or of y is selected.\n\n\n\n\n\n","category":"method"},{"location":"#CUDASIMDTypes.cvt_pack_s16-Tuple{Int32, Int32}","page":"CUDASIMDTypes.jl","title":"CUDASIMDTypes.cvt_pack_s16","text":"d = cvt_pack_s16(a::Int32, b::Int32)\nd::UInt32\nd[1] = sat(b)\nd[2] = sat(a)\n\n\n\n\n\n","category":"method"},{"location":"#CUDASIMDTypes.cvt_pack_s8-Tuple{Int32, Int32, UInt32}","page":"CUDASIMDTypes.jl","title":"CUDASIMDTypes.cvt_pack_s8","text":"d = cvt_pack_s8(a::Int32, b::Int32, c::UInt32)\nd::UInt32\nd[1] = sat(b)\nd[2] = sat(a)\nd[3] = c[1]\nd[4] = c[2]\n\n\n\n\n\n","category":"method"},{"location":"#CUDASIMDTypes.cvt_pack_s8-Tuple{Int32, Int32}","page":"CUDASIMDTypes.jl","title":"CUDASIMDTypes.cvt_pack_s8","text":"d = cvt_pack_s8(a::Int32, b::Int32)\nd::UInt32\nd[1] = sat(b)\nd[2] = sat(a)\nd[3] = 0\nd[4] = 0\n\n\n\n\n\n","category":"method"},{"location":"#CUDASIMDTypes.dp4a-Tuple{UInt32, UInt32, Int32}","page":"CUDASIMDTypes.jl","title":"CUDASIMDTypes.dp4a","text":"d = dp4a(a::UInt32, b::UInt32, c::Int32)\nd::Int32\nd = a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4] + c\n\n\n\n\n\n","category":"method"},{"location":"#CUDASIMDTypes.lop3-NTuple{4, UInt32}","page":"CUDASIMDTypes.jl","title":"CUDASIMDTypes.lop3","text":"lop3(a, b, c, lut)\n\nArbitrary logical operation on 3 inputs.\n\nCall the PTX prmt instruction. This computes a bitwise logical operation on the inputs a, b, and c.\n\nSee make_lop3_lut for creating the look-up table lut.\n\n\n\n\n\n","category":"method"},{"location":"#CUDASIMDTypes.make_lop3_lut-Tuple{Any}","page":"CUDASIMDTypes.jl","title":"CUDASIMDTypes.make_lop3_lut","text":"make_lop3_lut(f)\n\nCreate a look-up table for lop3.\n\n\n\n\n\n","category":"method"},{"location":"#CUDASIMDTypes.prmt-Tuple{UInt32, UInt32, UInt32}","page":"CUDASIMDTypes.jl","title":"CUDASIMDTypes.prmt","text":"prmt(a, b, op)\n\nPermute bytes bytes from a pair of inputs.\n\nCall the PTX prmt instruction. This picks four arbitrary bytes from the input values a and b.\n\n\n\n\n\n","category":"method"}]
}
